name: Django CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:latest
        ports:
          - 6379:6379

    env:
      DATABASE_URL: postgres://user:password@localhost:5432/test_db
      REDIS_URL: redis://localhost:6379
      DJANGO_SETTINGS_MODULE: BookStore.settings
      DEBUG: 'False'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run migrations and tests
      run: |
        python manage.py makemigrations --noinput
        python manage.py migrate --noinput
        python manage.py test
      env:
        DATABASE_URL: postgres://user:password@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379
        DJANGO_SETTINGS_MODULE: BookStore.settings
        DEBUG: 'False'

  build_and_push:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and push Docker image
      run: |
        docker build . -t ${{ secrets.DOCKER_HUB_USERNAME }}/bookstore:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/bookstore:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
    - name: Deploy to your server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/bookstore:latest
          docker-compose -f /path/to/docker-compose.yml up -d